openapi: 3.0.0
info:
  title: Foss Food
  description: "Foss Food Ordering System"
  version: 0.1.0
servers:
  - url: http://foss-food.local/v1
paths:
  /healthcheck/ping:
    get:
      description: Returns the readiness of the service
      operationId: ping
      x-eov-operation-id: ping
      x-eov-operation-handler: healthcheck
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheckResponse"
                properties:
                  message:
                    type: string
                    example: OK
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /menu/items:
    get:
      description: "Get all menu items"
      operationId: getMenuItems
      x-eov-operation-id: items
      x-eov-operation-handler: menu
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/menuItemsResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /menu/items/{id}:
    get:
      description: "Get all menu items"
      operationId: getMenuItemById
      x-eov-operation-id: item
      x-eov-operation-handler: menu
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The menu item ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/menuItemDetailResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /site-config:
    get:
      description: "Get site config"
      operationId: getSiteConfig
      x-eov-operation-id: currentConfig
      x-eov-operation-handler: site-config
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/siteConfigResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /db-settings:
    get:
      description: "Get db settings"
      operationId: getDbSettings
      x-eov-operation-id: currentSettings
      x-eov-operation-handler: db-settings
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dbSettingsResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /db-settings/create-db:
    post:
      description: "Create new DB"
      operationId: createDB
      x-eov-operation-id: createDB
      x-eov-operation-handler: db-settings
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheckResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /db-settings/create-tables:
    post:
      description: "Create DB Tables"
      operationId: createTables
      x-eov-operation-id: createTables
      x-eov-operation-handler: db-settings
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheckResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /inventory:
    get:
      description: "Get all inventory items"
      operationId: getInventoryItems
      x-eov-operation-id: items
      x-eov-operation-handler: inventory
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/inventoryItemsResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
    post:
      description: "Add new Inventory Item"
      operationId: addInventoryItem
      x-eov-operation-id: addItem
      x-eov-operation-handler: inventory
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/inventoryItemsResponse"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/inventoryItemsResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /inventory/{id}:
    delete:
      description: "Delete an Inventory Item"
      operationId: deleteInventoryItem
      x-eov-operation-id: deleteItem
      x-eov-operation-handler: inventory
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The menu item ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheckResponse"
                properties:
                  message:
                    type: string
                    example: OK
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"  
    put:
      description: "Update an Inventory Item"
      operationId: updateInventoryItem
      x-eov-operation-id: updateItem
      x-eov-operation-handler: inventory
      parameters:
        - $ref: "#/components/parameters/x-correlation-id"
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The menu item ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/inventoryItemsResponse"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inventoryItemsResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
components:
  responses:
    "401":
      description: Unauthorised Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorisedError"
    "404":
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundError"
    "500":
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"
    default:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidRequestError"
  parameters:
    x-correlation-id:
      name: x-correlation-id
      required: true
      in: header
      description: Correlation ID required for log tracing.
      schema:
        type: string
        format: uuid
  schemas:
    NotFoundError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    UnauthorisedError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InvalidRequestError:
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InternalServerError:
      title: Internal Server Error
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    healthCheckResponse:
      description: healthcheck OK response
      type: object
      properties:
        message:
          type: string
          enum:
            - OK
    menuItemsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - "id"
        - "name"
    menuItemDetailResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      required:
        - "id"
        - "name"
        - "description"
    inventoryItemsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
      required:
        - "id"
        - "name"
        - "description"
        - "quantity"
    siteConfigResponse:
      type: object
      properties:
        isDbConfigured:
          type: boolean
      required:
        - "isDbConfigured"
    dbSettingsResponse:
      type: object
      properties:
        doesDbExist:
          type: boolean
        isSetupComplete:
          type: boolean
        hasTables:
          type: boolean
      required:
        - "doesDbExist"
        - "isSetupComplete"
        - "hasTables"
